name: Release EasyCmd
on:
  # 触发条件：当推送到被打上 "v0.*" 或 "draft-*" 标签的分支时
  push:
    tags:
      - "v0.*"
      - "draft-*"

jobs:
  publishGitRelease:
    runs-on: ubuntu-latest # 使用Ubuntu作为运行环境

    steps:
      # 步骤1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4 # 使用actions/checkout action获取代码库

      # 步骤2: 设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x" # 安装Python 3.x版本

      # 步骤3: 安装依赖
      - name: Install dependencies
        run: |
          # 更新pip到最新版本
          python -m pip install --upgrade pip
          # 安装poetry用于包管理
          python -m pip install poetry
          # 根据requirements.txt安装项目依赖
          pip install -r requirements.txt

      # 步骤4: 构建Python包
      - name: Build Python package
        run: poetry build # 使用poetry构建包，输出在dist/目录下

      # 步骤5: 获取GitHub Release信息
      - name: Get Latest Release Info
        id: get_latest_release
        uses: bruceadams/get-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用GitHub Token获取权限

      # 步骤6: 上传.whl文件到Release
      - name: Upload .whl Asset
        uses: actions/upload-release-asset@v1
        with:
          # 上传URL来自get_release步骤的输出
          upload_url: ${{ steps.get_latest_release.outputs.upload_url }}
          # 资产路径，假设只上传第一个找到的.whl文件
          asset_path: dist/*.whl
          # 在GitHub Release页面显示的文件名
          asset_name: my_package-$(echo ${{ github.ref }} | sed 's/refs\/tags\///').whl
          # 文件类型
          asset_content_type: application/octet-stream

      # 可选：如果需要同时上传.tar.gz文件，可以添加类似上面的另一个步骤
      # ...
